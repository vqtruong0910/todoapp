{"version":3,"file":"static/js/351.c4851154.chunk.js","mappings":"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","sources":["components/EditFolder/index.js","firebase/firebase.js","feature/crud.js","store/Context.js","store/actions.js"],"sourcesContent":["import { useCallback, useContext, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Context from \"../../store/Context\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { updateFolderFromFireStore } from \"../../feature/crud\";\r\n\r\nfunction EditFolder() {\r\n    const { folderId } = useParams();\r\n    const [folder, dispatch] = useContext(Context);\r\n    const navigate = useNavigate();\r\n    const { register, handleSubmit, setFocus, formState: { errors } } = useForm({\r\n        mode: \"onBlur\",\r\n        defaultValues: {\r\n            name: folder[folderId]?.name\r\n        }\r\n    });\r\n\r\n    const handleSubmitEdit = useCallback((data) => {\r\n        // dispatch(editFolder(folderId, data.name));\r\n        updateFolderFromFireStore(folder[folderId].id, data.name)\r\n        navigate(\"/\");\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setFocus('name')\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"edit-page\">\r\n            <div className=\"container\">\r\n                <div className=\"gradient\">\r\n                    <h1>Edit Folder</h1>\r\n                </div>\r\n                <h3>Name Folder</h3>\r\n                <form onSubmit={handleSubmit(handleSubmitEdit)}>\r\n                    <div className=\"wrapper-edit\">\r\n                        <div className=\"edit\">\r\n                            <input type=\"text\" {...register(\"name\", {\r\n                                required: \"Please enter before pressing submit\",\r\n                                pattern: {\r\n                                    value: /^([^!@#$&%^()-_=+<>?;:'\"{[}]\\|.,`~*]|[a-zA-Z0-9 ])+$/,\r\n                                    message: \"Please enter before pressing submit\"\r\n                                }\r\n                            })} />\r\n                        </div>\r\n                        {errors.name?.type === 'required' && <p>{errors.name.message}</p>}\r\n                        {errors.name?.type === 'pattern' && <p>{errors.name.message}</p>}\r\n                    </div>\r\n                    <button>Save</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditFolder;","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"@firebase/firestore\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nconst db = getFirestore(app);\r\n\r\nexport { db };","import { addDoc, arrayUnion, collection, deleteDoc, doc, getDocs, onSnapshot, orderBy, query, updateDoc } from \"firebase/firestore\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport { loadData } from \"../store/actions\";\r\n\r\n\r\nconst usersCollectionRef = collection(db, \"todos\");\r\nconst queryRef = query(usersCollectionRef, orderBy(\"name\"));\r\nconst removeTodo = (list, indexId) => {\r\n    return list.slice(0, indexId).concat(list.slice(indexId + 1));\r\n}\r\n\r\nconst getDataFromFireStore = async (dispatch) => {\r\n    const data = await getDocs(queryRef);\r\n    dispatch(loadData(data.docs.map((doc) => ({ ...doc.data(), id: doc.id }))))\r\n}\r\n\r\nconst addFolderFromFireStore = (name) => {\r\n    const docRef = addDoc(usersCollectionRef, {\r\n        name,\r\n        list: []\r\n    })\r\n    docRef\r\n        .then(() => {\r\n            console.log(\"Add success\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nconst deleteFolderFromFireStore = (docId) => {\r\n    const docToUpdate = doc(db, \"todos\", docId);\r\n    deleteDoc(docToUpdate)\r\n        .then(() => {\r\n            console.log(\"Xoa thanh cong\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nconst updateFolderFromFireStore = async (docId, name) => {\r\n    const docToUpdate = doc(db, \"todos\", docId);\r\n    await updateDoc(docToUpdate, {\r\n        name\r\n    })\r\n        .then(() => {\r\n            console.log(\"Cap nhat thanh cong\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nconst addTodoFromFireStore = async (docId, content, date, priority, todo, completed) => {\r\n    const docToUpdate = doc(db, \"todos\", docId);\r\n    await updateDoc(docToUpdate, {\r\n        list: arrayUnion({\r\n            id: uuidv4(),\r\n            content,\r\n            date,\r\n            priority,\r\n            todo,\r\n            completed\r\n        })\r\n    })\r\n        .then(() => {\r\n            console.log(\"Them thanh cong\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nconst updateTodoFromFireStore = async (docId, todoId, list, content, date, priority, todo, completed) => {\r\n    const docToUpdate = doc(db, \"todos\", docId);\r\n    const newList = [...list];\r\n    newList[todoId] = {\r\n        ...newList[todoId],\r\n        content: content,\r\n        date: date,\r\n        completed: completed,\r\n        priority: priority,\r\n        todo: todo\r\n    };\r\n    await updateDoc(docToUpdate, {\r\n        list: [\r\n            ...newList\r\n        ]\r\n    })\r\n        .then(() => {\r\n            console.log(\"Cap nhat thanh cong\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nconst deleteTodoFromFireStore = async (list, docId, indexId) => {\r\n    const docToUpdate = doc(db, \"todos\", docId);\r\n    await updateDoc(docToUpdate, {\r\n        list: [\r\n            ...removeTodo(list, indexId)\r\n        ]\r\n    })\r\n        .then(() => {\r\n            console.log(\"Xoa thanh cong\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nconst completeTodo = async (docId, todoId, list, completed) => {\r\n    const docToUpdate = doc(db, \"todos\", docId);\r\n    const newList = [...list];\r\n    newList[todoId] = {\r\n        ...newList[todoId],\r\n        completed: !completed,\r\n    };\r\n    await updateDoc(docToUpdate, {\r\n        list: [\r\n            ...newList\r\n        ]\r\n    })\r\n        .then(() => {\r\n            console.log(\"Cap nhat thanh cong\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nexport {\r\n    usersCollectionRef,\r\n    queryRef,\r\n    getDataFromFireStore,\r\n    addFolderFromFireStore,\r\n    deleteFolderFromFireStore,\r\n    updateFolderFromFireStore,\r\n    addTodoFromFireStore,\r\n    updateTodoFromFireStore,\r\n    deleteTodoFromFireStore,\r\n    completeTodo\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nconst Context = createContext();\r\n\r\nexport default Context;","import { type } from '@testing-library/user-event/dist/type';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addTodoInFolder = (folderId, content, date, priority, todo, complete) => {\r\n    return {\r\n        type: \"ADD_TODO\",\r\n        payload: {\r\n            folderId,\r\n            id: uuidv4(),\r\n            content,\r\n            date,\r\n            priority,\r\n            todo,\r\n            complete\r\n        }\r\n    }\r\n}\r\n\r\nconst editNoteInFolder = (folderId, todoId, content, date, priority, todo, complete) => {\r\n    return {\r\n        type: \"EDIT_TODO\",\r\n        payload: {\r\n            folderId,\r\n            todoId,\r\n            content,\r\n            date,\r\n            priority,\r\n            todo,\r\n            complete\r\n        }\r\n    }\r\n}\r\n\r\nconst deleteNoteInFolder = (folderId, todoId) => {\r\n    return {\r\n        type: \"DELETE_TODO\",\r\n        payload: {\r\n            folderId,\r\n            todoId\r\n        }\r\n    }\r\n}\r\n\r\nconst completeNote = (folderId, isCompleted, todoId) => {\r\n    return {\r\n        type: \"COMPLETE_TODO\",\r\n        payload: {\r\n            folderId,\r\n            isCompleted,\r\n            todoId\r\n        }\r\n    }\r\n}\r\n\r\nconst addFolder = (name) => {\r\n    return {\r\n        type: \"ADD_FOLDER\",\r\n        payload: {\r\n            id: uuidv4(),\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nconst deleteFolder = (folderId) => {\r\n    return {\r\n        type: \"DELETE_FOLDER\",\r\n        payload: {\r\n            folderId\r\n        }\r\n    }\r\n}\r\n\r\nconst editFolder = (folderId, name) => {\r\n    return {\r\n        type: \"EDIT_FOLDER\",\r\n        payload: {\r\n            folderId,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nconst loadData = (data) => {\r\n    return {\r\n        type: \"LOAD_DATA\",\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    addTodoInFolder,\r\n    editNoteInFolder,\r\n    deleteNoteInFolder,\r\n    completeNote,\r\n    addFolder,\r\n    deleteFolder,\r\n    editFolder,\r\n    loadData\r\n};"],"names":["folderId","useParams","useContext","Context","folder","navigate","useNavigate","useForm","mode","defaultValues","name","register","handleSubmit","setFocus","errors","formState","handleSubmitEdit","useCallback","data","updateFolderFromFireStore","id","useEffect","className","onSubmit","type","required","pattern","value","message","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","usersCollectionRef","collection","queryRef","query","orderBy","removeTodo","list","indexId","slice","concat","addFolderFromFireStore","addDoc","then","console","log","catch","err","deleteFolderFromFireStore","docId","docToUpdate","doc","deleteDoc","updateDoc","addTodoFromFireStore","content","date","priority","todo","completed","arrayUnion","uuidv4","updateTodoFromFireStore","todoId","newList","deleteTodoFromFireStore","completeTodo","createContext","loadData","payload"],"sourceRoot":""}