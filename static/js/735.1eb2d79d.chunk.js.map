{"version":3,"file":"static/js/735.1eb2d79d.chunk.js","mappings":"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","sources":["components/FolderItem/index.js","components/Folder/index.js","components/LoadingData/index.js","firebase/firebase.js","feature/crud.js","sgv/sgvDelete.js","sgv/sgvEdit.js","store/Context.js","store/actions.js"],"sourcesContent":["import sgvEdit from \"../../sgv/sgvEdit\";\r\nimport sgvDelete from \"../../sgv/sgvDelete\";\r\n\r\nfunction FolderItem({ handleClickEditFolder, handleClickDeleteFolder }) {\r\n    return (\r\n        <div className=\"edit-and-delete\">\r\n            <span className=\"svg-edit\" onClick={handleClickEditFolder}>{sgvEdit}</span>\r\n            <span className=\"svg-delete\" onClick={handleClickDeleteFolder}>{sgvDelete}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FolderItem;","import { useCallback, memo, useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Context from \"../../store/Context\";\r\nimport FolderItem from \"../FolderItem\";\r\nimport { addFolderFromFireStore, deleteFolderFromFireStore } from \"../../feature/crud\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport LoadingData from \"../LoadingData\";\r\n\r\nfunction Folder() {\r\n    const [folder, dispatch, stateLoading] = useContext(Context);\r\n    const [state, setState] = useState(false);\r\n    const { register, handleSubmit, setValue, setFocus, formState: { errors } } = useForm({ mode: \"onBlur\" });\r\n    const navigate = useNavigate();\r\n\r\n    const handleChangeInput = useCallback((data) => {\r\n        // dispatch(addFolder(data.inputfolder));\r\n        addFolderFromFireStore(data.inputfolder)\r\n        setValue('inputfolder', '', { shouldDirty: true });\r\n        setFocus('inputfolder');\r\n    }, []);\r\n    // const handleReLoad = () => {\r\n    //     getDataFromFireStore(dispatch);\r\n    // }\r\n    const handleClickEditFolder = useCallback((index) => {\r\n        navigate(`/edit-folder/${index}`);\r\n    }, [])\r\n    const handleClickDeleteFolder = useCallback((index) => {\r\n        if (global.confirm(\"Are you sure you want to delete it?\"))\r\n            // dispatch(deleteFolder(index));\r\n            deleteFolderFromFireStore(index);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"header\">\r\n                <div className=\"gradient\">\r\n                    <h1>Tasks Lists</h1>\r\n                </div>\r\n                <p>A list of files</p>\r\n                {/* <button onClick={handleReLoad}>Reload</button> */}\r\n                <form onSubmit={handleSubmit(handleChangeInput)}>\r\n                    <div className=\"bar-add-folder\">\r\n                        <div className=\"bar-input\">\r\n                            <input type=\"text\" placeholder=\"Add your new folder...\" {...register(\"inputfolder\", {\r\n                                required: \"Please enter before pressing submit\",\r\n                                pattern: {\r\n                                    value: /^([^!@#$&%^()-_=+<>?;:'\"{[}]\\|.,`~*]|[a-zA-Z0-9 ])+$/g,\r\n                                    message: \"Do not enter special characters\"\r\n                                }\r\n                            })} />\r\n                            {errors.inputfolder?.type === 'required' && <p>{errors.inputfolder.message}</p>}\r\n                            {errors.inputfolder?.type === 'pattern' && <p>{errors.inputfolder.message}</p>}\r\n                        </div>\r\n                        <div className=\"submit-add\">\r\n                            <button>Add folder</button>\r\n                        </div>\r\n                        <br />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"folder\">\r\n                {!stateLoading && <LoadingData />}\r\n                <ul className=\"list\">\r\n                    {folder.map((item, index) => (\r\n                        <li key={index}>\r\n                            <Link to={`/folder?todo=${index}`}>{item.name}</Link>\r\n                            <FolderItem\r\n                                handleClickEditFolder={() => { handleClickEditFolder(index) }}\r\n                                handleClickDeleteFolder={() => { handleClickDeleteFolder(item.id) }}\r\n                            />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(Folder);","function LoadingData() {\r\n    return (\r\n        <div className=\"wrapper-loading-data\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingData;","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"@firebase/firestore\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nconst db = getFirestore(app);\r\n\r\nexport { db };","import { addDoc, arrayUnion, collection, deleteDoc, doc, getDocs, orderBy, query, updateDoc } from \"firebase/firestore\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport { loadData } from \"../store/actions\";\r\n\r\n\r\nconst usersCollectionRef = collection(db, \"todos\");\r\nconst queryRef = query(usersCollectionRef, orderBy(\"name\"));\r\nconst removeTodo = (list, indexId) => {\r\n    return list.slice(0, indexId).concat(list.slice(indexId + 1));\r\n}\r\n\r\nconst getDataFromFireStore = async (dispatch) => {\r\n    const data = await getDocs(queryRef);\r\n    dispatch(loadData(data.docs.map((doc) => ({ ...doc.data(), id: doc.id }))))\r\n}\r\n\r\nconst addFolderFromFireStore = (name) => {\r\n    const docRef = addDoc(usersCollectionRef, {\r\n        name,\r\n        list: []\r\n    })\r\n    docRef\r\n        .then(() => {\r\n            console.log(\"Add success\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nconst deleteFolderFromFireStore = (docId) => {\r\n    const docToUpdate = doc(db, \"todos\", docId);\r\n    deleteDoc(docToUpdate)\r\n        .then(() => {\r\n            console.log(\"Xoa thanh cong\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nconst updateFolderFromFireStore = (docId, name) => {\r\n    const docToUpdate = doc(db, \"todos\", docId);\r\n    updateDoc(docToUpdate, {\r\n        name\r\n    })\r\n        .then(() => {\r\n            console.log(\"Cap nhat thanh cong\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nconst addTodoFromFireStore = (docId, content, date, priority, todo, completed) => {\r\n    const docToUpdate = doc(db, \"todos\", docId);\r\n    updateDoc(docToUpdate, {\r\n        list: arrayUnion({\r\n            id: uuidv4(),\r\n            content,\r\n            date,\r\n            priority,\r\n            todo,\r\n            completed\r\n        })\r\n    })\r\n        .then(() => {\r\n            console.log(\"Them thanh cong\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nconst updateTodoFromFireStore = (docId, todoId, list, content, date, priority, todo, completed) => {\r\n    const docToUpdate = doc(db, \"todos\", docId);\r\n    const newList = [...list];\r\n    newList[todoId] = {\r\n        ...newList[todoId],\r\n        content: content,\r\n        date: date,\r\n        completed: completed,\r\n        priority: priority,\r\n        todo: todo\r\n    };\r\n    updateDoc(docToUpdate, {\r\n        list: [\r\n            ...newList\r\n        ]\r\n    })\r\n        .then(() => {\r\n            console.log(\"Cap nhat thanh cong\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nconst deleteTodoFromFireStore = (list, docId, indexId) => {\r\n    const docToUpdate = doc(db, \"todos\", docId);\r\n    updateDoc(docToUpdate, {\r\n        list: [\r\n            ...removeTodo(list, indexId)\r\n        ]\r\n    })\r\n        .then(() => {\r\n            console.log(\"Xoa thanh cong\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nconst completeTodo = (docId, todoId, list, completed) => {\r\n    const docToUpdate = doc(db, \"todos\", docId);\r\n    const newList = [...list];\r\n    newList[todoId] = {\r\n        ...newList[todoId],\r\n        completed: !completed,\r\n    };\r\n    updateDoc(docToUpdate, {\r\n        list: [\r\n            ...newList\r\n        ]\r\n    })\r\n        .then(() => {\r\n            console.log(\"Cap nhat thanh cong\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nexport {\r\n    usersCollectionRef,\r\n    queryRef,\r\n    getDataFromFireStore,\r\n    addFolderFromFireStore,\r\n    deleteFolderFromFireStore,\r\n    updateFolderFromFireStore,\r\n    addTodoFromFireStore,\r\n    updateTodoFromFireStore,\r\n    deleteTodoFromFireStore,\r\n    completeTodo\r\n};\r\n","const sgvDelete = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M135.2 17.69C140.6 6.848 151.7 0 163.8 0H284.2C296.3 0 307.4 6.848 312.8 17.69L320 32H416C433.7 32 448 46.33 448 64C448 81.67 433.7 96 416 96H32C14.33 96 0 81.67 0 64C0 46.33 14.33 32 32 32H128L135.2 17.69zM394.8 466.1C393.2 492.3 372.3 512 346.9 512H101.1C75.75 512 54.77 492.3 53.19 466.1L31.1 128H416L394.8 466.1z\" /></svg>;\r\n\r\nexport default sgvDelete;","const sgvEdit = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M490.3 40.4C512.2 62.27 512.2 97.73 490.3 119.6L460.3 149.7L362.3 51.72L392.4 21.66C414.3-.2135 449.7-.2135 471.6 21.66L490.3 40.4zM172.4 241.7L339.7 74.34L437.7 172.3L270.3 339.6C264.2 345.8 256.7 350.4 248.4 353.2L159.6 382.8C150.1 385.6 141.5 383.4 135 376.1C128.6 370.5 126.4 361 129.2 352.4L158.8 263.6C161.6 255.3 166.2 247.8 172.4 241.7V241.7zM192 63.1C209.7 63.1 224 78.33 224 95.1C224 113.7 209.7 127.1 192 127.1H96C78.33 127.1 64 142.3 64 159.1V416C64 433.7 78.33 448 96 448H352C369.7 448 384 433.7 384 416V319.1C384 302.3 398.3 287.1 416 287.1C433.7 287.1 448 302.3 448 319.1V416C448 469 405 512 352 512H96C42.98 512 0 469 0 416V159.1C0 106.1 42.98 63.1 96 63.1H192z\" /></svg>;\r\n\r\nexport default sgvEdit;","import { createContext } from \"react\";\r\n\r\nconst Context = createContext();\r\n\r\nexport default Context;","import { type } from '@testing-library/user-event/dist/type';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addTodoInFolder = (folderId, content, date, priority, todo, complete) => {\r\n    return {\r\n        type: \"ADD_TODO\",\r\n        payload: {\r\n            folderId,\r\n            id: uuidv4(),\r\n            content,\r\n            date,\r\n            priority,\r\n            todo,\r\n            complete\r\n        }\r\n    }\r\n}\r\n\r\nconst editNoteInFolder = (folderId, todoId, content, date, priority, todo, complete) => {\r\n    return {\r\n        type: \"EDIT_TODO\",\r\n        payload: {\r\n            folderId,\r\n            todoId,\r\n            content,\r\n            date,\r\n            priority,\r\n            todo,\r\n            complete\r\n        }\r\n    }\r\n}\r\n\r\nconst deleteNoteInFolder = (folderId, todoId) => {\r\n    return {\r\n        type: \"DELETE_TODO\",\r\n        payload: {\r\n            folderId,\r\n            todoId\r\n        }\r\n    }\r\n}\r\n\r\nconst completeNote = (folderId, isCompleted, todoId) => {\r\n    return {\r\n        type: \"COMPLETE_TODO\",\r\n        payload: {\r\n            folderId,\r\n            isCompleted,\r\n            todoId\r\n        }\r\n    }\r\n}\r\n\r\nconst addFolder = (name) => {\r\n    return {\r\n        type: \"ADD_FOLDER\",\r\n        payload: {\r\n            id: uuidv4(),\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nconst deleteFolder = (folderId) => {\r\n    return {\r\n        type: \"DELETE_FOLDER\",\r\n        payload: {\r\n            folderId\r\n        }\r\n    }\r\n}\r\n\r\nconst editFolder = (folderId, name) => {\r\n    return {\r\n        type: \"EDIT_FOLDER\",\r\n        payload: {\r\n            folderId,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nconst loadData = (data) => {\r\n    return {\r\n        type: \"LOAD_DATA\",\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    addTodoInFolder,\r\n    editNoteInFolder,\r\n    deleteNoteInFolder,\r\n    completeNote,\r\n    addFolder,\r\n    deleteFolder,\r\n    editFolder,\r\n    loadData\r\n};"],"names":["handleClickEditFolder","handleClickDeleteFolder","className","onClick","sgvEdit","sgvDelete","Folder","useContext","Context","folder","stateLoading","useState","useForm","mode","register","handleSubmit","setValue","setFocus","errors","formState","navigate","useNavigate","handleChangeInput","useCallback","data","addFolderFromFireStore","inputfolder","shouldDirty","index","global","confirm","deleteFolderFromFireStore","onSubmit","type","placeholder","required","pattern","value","message","LoadingData","map","item","to","name","id","memo","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","usersCollectionRef","collection","queryRef","query","orderBy","removeTodo","list","indexId","slice","concat","addDoc","then","console","log","catch","err","docId","docToUpdate","doc","deleteDoc","updateFolderFromFireStore","updateDoc","addTodoFromFireStore","content","date","priority","todo","completed","arrayUnion","uuidv4","updateTodoFromFireStore","todoId","newList","deleteTodoFromFireStore","completeTodo","xmlns","viewBox","d","createContext","loadData","payload"],"sourceRoot":""}